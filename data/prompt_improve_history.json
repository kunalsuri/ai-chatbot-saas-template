{
  "improvements": [
    {
      "id": "a2ac0d69-aba1-410b-bece-978eabbaeb59",
      "original": "Generate interview questions for a senior software developer position.",
      "improved": "# ENHANCED PROMPT\n\n**ROLE & CONTEXT**\nYou are a senior React developer specializing in front-end development for a mid-sized e-commerce company. We need you to assist our team in creating interview questions for a senior software developer position, focusing on front-end expertise and technical knowledge.\n\n**OBJECTIVE**\nDevelop 10 comprehensive interview questions that assess the candidate's skills in React, JavaScript, CSS preprocessors, and relevant design patterns, ensuring we can identify top talent for the role.\n\n**REQUIREMENTS**\n\n* File paths and naming conventions: Questions should be stored in a markdown file within the company's knowledge base repository (e.g., `interview-questions.md`).\n* Code structure and architecture patterns: Use a consistent format for each question, including clear descriptions of the problem, expected solutions, and evaluation criteria.\n* Dependencies and imports required:\n\t+ No external dependencies are needed.\n\t+ Basic JavaScript libraries like Lodash or Moment.js can be used for simplicity.\n* Specific functions, classes, or components to create:\n\t+ Questions should cover a range of topics, including React hooks, state management, CSS preprocessors (e.g., Sass), and design patterns.\n\n**IMPLEMENTATION STEPS**\n\n1. Create a list of relevant front-end technologies and skills required for the senior developer position.\n2. Develop 5-7 questions that assess problem-solving skills, coding knowledge, and technical expertise in React, JavaScript, and related areas.\n3. Craft 3-4 behavioral-based questions to evaluate the candidate's experience with team collaboration, communication, and project management.\n4. Write a set of 1-2 \"whiteboard-style\" questions to test the candidate's real-time problem-solving abilities.\n\n**SUCCESS CRITERIA**\nTo consider the task complete, we require:\n* All 10 interview questions in a well-formatted markdown file (`interview-questions.md`) within our knowledge base repository.\n* A minimum of 80% completion rate on a testing round with mock candidates.\n\n**ADDITIONAL CONSIDERATIONS**\n\n* Ensure all questions are relevant to the role and align with industry standards.\n* Include clear instructions for candidate submission, grading, and feedback.\n\nThis enhanced prompt provides a solid foundation for our AI coding assistant to generate high-quality interview questions that meet our requirements.",
      "model": "llama3.2:latest",
      "provider": "ollama",
      "tokens": 596,
      "userId": "local-user",
      "timestamp": "2025-09-14T08:12:40.287Z"
    },
    {
      "id": "c46c54c2-d446-428a-bd72-79e864d59c1f",
      "original": "Generate interview questions for a senior software developer position.",
      "improved": "# ENHANCED PROMPT\n\n**ROLE & CONTEXT**\nYou are a senior React developer tasked with contributing to a scalable e-commerce platform built using Node.js, Express, and MongoDB. The current state of the codebase is maintained by a team of developers who have been working on it for the past year. Our goal is to create engaging interview questions that assess a candidate's proficiency in modern JavaScript frameworks, back-end development, and design principles.\n\n**OBJECTIVE**\nCreate 10 comprehensive interview questions that evaluate a senior software developer's skills and knowledge in the following areas:\n1. React component lifecycle management\n2. Redux architecture\n3. Express.js routing and API design\n4. MongoDB schema design and query optimization\n5. Web security best practices\n\n**REQUIREMENTS**\n- Include specific examples from popular frameworks (e.g., Material-UI, Bootstrap)\n- Use imperative language throughout the prompt\n- Specify exact file locations for testing\n- Assume a basic understanding of Node.js and Express\n\n**IMPLEMENTATION STEPS:**\n\n1. Design an interview question that assesses a candidate's ability to write reusable React components using hooks.\n2. Develop a comprehensive review process for evaluating code quality in a team setting, including metrics and tools for measuring code coverage.\n\n**SUCCESS CRITERIA**\nA set of 10 interview questions with clear explanations and expected outcomes will be deemed complete when:\n- All questions are thoroughly reviewed by the team\n- Candidate responses demonstrate proficiency in modern development practices\n- Interviews are conducted using our platform within the next two weeks\n\n**ADDITIONAL CONSIDERATIONS:**\n- Error handling is implemented for candidate responses (5/10 correct answers).\n- Edge cases such as \"What if there's a conflict between React component state and Redux store updates?\" are included.\n- A performance benchmark is set to ensure interviews can be completed within 60 minutes.\n\nLet me know if this meets your requirements or if you need further adjustments!",
      "model": "llama3.2:latest",
      "provider": "ollama",
      "tokens": 514,
      "userId": "local-user",
      "timestamp": "2025-09-13T23:10:46.870Z"
    }
  ]
}